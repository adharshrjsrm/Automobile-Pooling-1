{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\Automobile-Pooling-1\\\\automobile-pooling\\\\pooling\\\\automobilepooling-fe\\\\src\\\\home\\\\MyPassengerLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport Form from \"react-validation/build/form\";\nimport { useHistory } from \"react-router-dom\";\nimport { login } from \"../services/authService\";\nimport authHeader from '../services/authHeader';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this);\n  }\n};\n\nexport default function MyPassengerLogin() {\n  _s();\n\n  const config = {\n    headers: authHeader()\n  };\n  const [isValid, setIsValid] = useState(false);\n  const form = useRef();\n  const checkBtn = useRef();\n  const emailRegex = /\\S+@\\S+\\.\\S+/;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeEmail = e => {\n    const email = e.target.value;\n    setEmail(email);\n\n    if (emailRegex.test(email)) {\n      setIsValid(true);\n      setMessage('');\n    } else {\n      setIsValid(false);\n      setMessage('Please enter a valid email!');\n    }\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const history = useHistory();\n\n  const handleLogin = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setLoading(true);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      login(email, password).then(() => {\n        const loadUser = async () => {\n          const result = await axios.get(`http://localhost:9000/api/existuser`, config);\n          console.log(\"user\" + result.data);\n          if (result.data) history.push('/passengerdash');else history.push('/newpassenger');\n        }; //window.location.reload();\n\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        setLoading(false);\n        setMessage(resMessage);\n      });\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MyLogin\",\n    align: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleLogin,\n      ref: form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"email\",\n          value: email,\n          onChange: onChangeEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          className: \"form-control\",\n          name: \"password\",\n          value: password,\n          onChange: onChangePassword,\n          validations: [required]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-custom\",\n          disabled: loading,\n          children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner-border spinner-border-sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-danger\",\n          role: \"alert\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n        style: {\n          display: \"none\"\n        },\n        ref: checkBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyPassengerLogin, \"Igvxoq7FxVpc4mgHtjAhReikL1c=\", false, function () {\n  return [useHistory];\n});\n\n_c = MyPassengerLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPassengerLogin\");","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/Automobile-Pooling-1/automobile-pooling/pooling/automobilepooling-fe/src/home/MyPassengerLogin.js"],"names":["React","useState","useRef","Input","CheckButton","Form","useHistory","login","authHeader","axios","required","value","MyPassengerLogin","config","headers","isValid","setIsValid","form","checkBtn","emailRegex","email","setEmail","password","setPassword","loading","setLoading","message","setMessage","onChangeEmail","e","target","test","onChangePassword","history","handleLogin","preventDefault","current","validateAll","context","_errors","length","then","loadUser","result","get","console","log","data","push","error","resMessage","response","toString","display"],"mappings":"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","sourcesContent":["import React, { useState,useRef} from \"react\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport Form from \"react-validation/build/form\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {login} from \"../services/authService\";\r\nimport authHeader from '../services/authHeader';\r\nimport axios from 'axios';\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This field is required!\r\n        </div>\r\n      );\r\n    }\r\n  };\r\nexport default function MyPassengerLogin() {\r\n  const config = {\r\n    headers: authHeader()\r\n  }; \r\n    const [isValid, setIsValid] = useState(false);\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeEmail = (e) => {\r\n      const email = e.target.value;\r\n      setEmail(email);\r\n      if (emailRegex.test(email)) {\r\n        setIsValid(true);\r\n        setMessage('');\r\n      } else {\r\n        setIsValid(false);\r\n        setMessage('Please enter a valid email!');\r\n      }\r\n    };\r\n \r\n\r\n      const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n      };\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n    \r\n        setMessage(\"\");\r\n        setLoading(true);\r\n        \r\n        form.current.validateAll();\r\n       \r\n        if (checkBtn.current.context._errors.length === 0) {\r\n          login(email, password).then(\r\n            () => {\r\n              const loadUser = async () => {\r\n                const result = await axios.get(`http://localhost:9000/api/existuser`,config);\r\n                console.log(\"user\"+result.data)\r\n               if(result.data)\r\n               history.push('/passengerdash')\r\n               else\r\n               history.push('/newpassenger')\r\n              };\r\n              \r\n              //window.location.reload();\r\n            }, (error) => {\r\n              const resMessage =\r\n                (error.response &&\r\n                  error.response.data &&\r\n                  error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n    \r\n              setLoading(false);\r\n              setMessage(resMessage);\r\n            }\r\n          );\r\n        } else {\r\n          setLoading(false);\r\n        }\r\n      };\r\n    \r\n    return (\r\n        <div className=\"MyLogin\" align =\"center\">\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email</label>\r\n          <Input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           name=\"email\"\r\n           value={email}\r\n           onChange={onChangeEmail}\r\n\r\n           />\r\n        </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"password\">Password</label>\r\n        <Input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={onChangePassword}\r\n          validations={[required]}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <button className=\"btn-custom\" disabled={loading}>\r\n          {loading && (\r\n            <span className=\"spinner-border spinner-border-sm\"></span>\r\n          )}\r\n          <span>Login</span>\r\n        </button>\r\n      </div>\r\n\r\n      {message && (\r\n        <div className=\"form-group\">\r\n          <div className=\"alert-danger\" role=\"alert\">\r\n            {message}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n    </Form>\r\n    </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}