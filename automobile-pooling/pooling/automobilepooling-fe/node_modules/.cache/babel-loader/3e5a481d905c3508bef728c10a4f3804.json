{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\Automobile-Pooling-1\\\\automobile-pooling\\\\pooling\\\\automobilepooling-fe\\\\src\\\\home\\\\MyRegister.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport { register } from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst validEmail = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This is not a valid email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The password must be between 6 and 40 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst MyRegister = props => {\n  _s();\n\n  const form = useRef();\n  const checkBtn = useRef();\n  const [isValid, setIsValid] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const emailRegex = /^\\\"?[\\w-_\\.]*\\\"?@srmtech\\.com$/;\n\n  const onChangeEmail = e => {\n    const email = e.target.value;\n    setEmail(email);\n\n    if (emailRegex.test(email)) {\n      setIsValid(true);\n      setMessage('');\n    } else {\n      setIsValid(false);\n      setMessage('Please enter a valid email!');\n    }\n  };\n\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setSuccessful(false);\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      register(email, password).then(response => {\n        setMessage(response.data.message);\n        setSuccessful(true);\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        setMessage(resMessage);\n        setSuccessful(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    align: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleRegister,\n        ref: form,\n        children: [!successful && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"email\",\n              value: email,\n              onChange: onChangeEmail,\n              validations: [required, validEmail]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              className: \"form-control\",\n              name: \"password\",\n              value: password,\n              onChange: onChangePassword,\n              validations: [required, vpassword]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-custom\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: successful ? \"alert alert-success\" : \"alert alert-danger\",\n            role: \"alert\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n          style: {\n            display: \"none\"\n          },\n          ref: checkBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyRegister, \"8QrKuaTdqODqxlDkIqdq9nA4mwU=\");\n\n_c = MyRegister;\nexport default MyRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRegister\");","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/Automobile-Pooling-1/automobile-pooling/pooling/automobilepooling-fe/src/home/MyRegister.js"],"names":["React","useState","useRef","Form","Input","CheckButton","isEmail","register","required","value","validEmail","vpassword","length","MyRegister","props","form","checkBtn","isValid","setIsValid","email","setEmail","password","setPassword","successful","setSuccessful","message","setMessage","emailRegex","onChangeEmail","e","target","test","onChangePassword","handleRegister","preventDefault","current","validateAll","context","_errors","then","response","data","error","resMessage","toString","display"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport  {register} from \"../services/authService\" \r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst MyRegister = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const emailRegex = /^\\\"?[\\w-_\\.]*\\\"?@srmtech\\.com$/;\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n    if (emailRegex.test(email)) {\r\n      setIsValid(true);\r\n      setMessage('');\r\n    } else {\r\n      setIsValid(false);\r\n      setMessage('Please enter a valid email!');\r\n    }\r\n  };\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setSuccessful(false);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      register(email, password).then(\r\n        (response) => {\r\n          setMessage(response.data.message);\r\n          setSuccessful(true);\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setMessage(resMessage);\r\n          setSuccessful(false);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\" align=\"center\">\r\n      <div className=\"card card-container\">\r\n        <Form onSubmit={handleRegister} ref={form}>\r\n          {!successful && (\r\n            <div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChangeEmail}\r\n                  validations={[required, validEmail]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={onChangePassword}\r\n                  validations={[required, vpassword]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <button className=\"btn-custom\">Sign Up</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={ successful ? \"alert alert-success\" : \"alert alert-danger\" }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyRegister;"]},"metadata":{},"sourceType":"module"}